package theoldone822.EWtweaks;

import java.io.File;
import java.util.Arrays;

import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.CraftingManager;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.oredict.OreDictionary;
import net.minecraftforge.oredict.ShapedOreRecipe;
import theoldone822.EWtweaks.CommonProxy;
import theoldone822.EWtweaks.gui.TweakGuiHandler;
import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;

@Mod(
		modid = "EWtweaks",
		name = "Extended Workbench Tweaks",
		version = "1.0",
		dependencies = "required-before:extendedWorkbench")

public class EWtweaks {
	public static int hardExtended = 0;
	public static Configuration config;

	public static Block newworkbench;
	
	@SidedProxy(clientSide = "theoldone822.EWtweaks.ClientProxy", serverSide = "theoldone822.EWtweaks.CommonProxy")
	public static CommonProxy proxy;

	@Instance("EWtweaks")
	public static EWtweaks instance;

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
        MinecraftForge.EVENT_BUS.register(this);

		ModMetadata metadata = event.getModMetadata();
		metadata.autogenerated = false;

		metadata.authorList = Arrays.asList("theoldone822");
		metadata.description = "Allows tweaking of the Extended tools and armor stats.";

        config = new Configuration(new File("config", "EWtweaks.cfg"));
		config.load();

		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseSwordDurability = (float) config.get("extendedValues", "Sword Durability", 1.5).getDouble(1.5);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseSwordDamage = (float) config.get("extendedValues", "Sword Damage (Base EW locked to 2.0)", 2.0).getDouble(2.0);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseSwordMiningSpeed = (float) config.get("extendedValues", "Sword Mining Speed", 1.5).getDouble(1.5);

		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseToolDurability = (float) config.get("extendedValues", "Tool Durability", 2.0).getDouble(2.0);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseToolPower = (float) config.get("extendedValues", "Tool Mining Speed", 2.0).getDouble(2.0);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseToolAttackDamage = (float) config.get("extendedValues", "Tool Damage", 1.5).getDouble(1.5);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseHoeDurability = (float) config.get("extendedValues", "Hoe Durability", 2.0).getDouble(2.0);

		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseBowDurability = (float) config.get("extendedValues", "Bow Durability", 1.5).getDouble(1.5);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseBowStrength = (float) config.get("extendedValues", "Bow Strength", 1.5).getDouble(1.5);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseBowTime = (float) config.get("extendedValues", "Bow Time", 1.2).getDouble(1.2);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseBowDamage = (float) config.get("extendedValues", "Bow Damage", 1.5).getDouble(1.5);

		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseArmorDurability = (float) config.get("extendedValues", "Armor Durability", 1.5).getDouble(1.5);

		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseShearDurability = (float) config.get("extendedValues", "Shears Durability", 1.5).getDouble(1.5);
		naruto1310.extendedWorkbench.mod_ExtendedWorkbench.extendedValues.increaseShearMiningSpeed = (float) config.get("extendedValues", "Shear Mining Speed", 1.5).getDouble(1.5);

		hardExtended = config.get("Harder Extended Workbench", "Recipe", 0).getInt();

		config.addCustomCategoryComment("Harder Extended Workbench", "Changes the Extended Workbench so you need to upgrade a normal crafting table before putting 2 next to each other will work. ATM this requires Natura be installed to work. if set to 1 to upgrade you put a crafting table in the middle with 3 cobble stone on top and the rest planks. At 2 its Iron ingots on top and cobble stone around and 3 obsidian and Iron Ingots");

		config.save();

		CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(Blocks.planks, 2), true, new Object[]{" X", "X ", Character.valueOf('X'), "plankWood",}));
		CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(Blocks.planks, 2), true, new Object[]{"X ", " X", Character.valueOf('X'), "plankWood",}));
		CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(Items.stick, 1), true, new Object[]{"X", Character.valueOf('X'), "stickWood",}));

		newworkbench = new NewBlockWorkbench().setHardness(2.5F).setStepSound(Block.soundTypeWood).setBlockName("newworkbench").setBlockTextureName("crafting_table");
		GameRegistry.registerBlock(newworkbench, "newworkbench");
        OreDictionary.registerOre("crafterWood", new ItemStack(newworkbench, 1));
        OreDictionary.registerOre("craftingTableWood", new ItemStack(newworkbench, 1));
        LanguageRegistry.addName(newworkbench, "Basic Crafting Table");

		if (hardExtended != 0 && hardExtended < 4){
			RecipeRemover.removeAnyRecipe(new ItemStack(Blocks.crafting_table));
			CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(newworkbench, 1), true, new Object[]{"XX", "XX", Character.valueOf('X'), "plankWood",}));

			if (hardExtended == 1)
				CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(Blocks.crafting_table, 1), true, new Object[]{"XXX", "YZY", "YYY", Character.valueOf('X'), Blocks.cobblestone, Character.valueOf('Y'), "plankWood", Character.valueOf('Z'), "crafterWood",}));

			if (hardExtended == 2)
				CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(Blocks.crafting_table, 1), true, new Object[]{"XXX", "YZY", "YYY", Character.valueOf('X'), Items.iron_ingot, Character.valueOf('Y'), Blocks.cobblestone, Character.valueOf('Z'), "crafterWood",}));

			if (hardExtended == 3)
				CraftingManager.getInstance().getRecipeList().add(new ShapedOreRecipe(new ItemStack(Blocks.crafting_table, 1), true, new Object[]{"XXX", "YZY", "YYY", Character.valueOf('X'), Blocks.obsidian, Character.valueOf('Y'), Items.iron_ingot, Character.valueOf('Z'), "crafterWood",}));
		}
	}
    @EventHandler
    public void init (FMLInitializationEvent event)
    {
        proxy.registerRenderInformation();
        NetworkRegistry.INSTANCE.registerGuiHandler(instance, new TweakGuiHandler());
    }
}
